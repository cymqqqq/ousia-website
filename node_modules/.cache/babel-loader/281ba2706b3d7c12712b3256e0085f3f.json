{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\n\nvar ethjs_util_1 = require(\"ethjs-util\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\n\n\nexports.assertIsHexString = function (input) {\n  if (!ethjs_util_1.isHexString(input)) {\n    var msg = \"This method only supports 0x-prefixed hex strings but input was: \" + input;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\n\n\nexports.assertIsBuffer = function (input) {\n  if (!Buffer.isBuffer(input)) {\n    var msg = \"This method only supports Buffer but input was: \" + input;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\n\n\nexports.assertIsArray = function (input) {\n  if (!Array.isArray(input)) {\n    var msg = \"This method only supports number arrays but input was: \" + input;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\n\n\nexports.assertIsString = function (input) {\n  if (typeof input !== 'string') {\n    var msg = \"This method only supports strings but input was: \" + input;\n    throw new Error(msg);\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;;;;AAIaA,4BAAoB,UAAUC,KAAV,EAAuB;AACtD,MAAI,CAACC,yBAAYD,KAAZ,CAAL,EAAyB;AACvB,QAAME,GAAG,GAAG,sEAAoEF,KAAhF;AACA,UAAM,IAAIG,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CALY;AAOb;;;;;;AAIaH,yBAAiB,UAAUC,KAAV,EAAuB;AACnD,MAAI,CAACI,MAAM,CAACC,QAAP,CAAgBL,KAAhB,CAAL,EAA6B;AAC3B,QAAME,GAAG,GAAG,qDAAmDF,KAA/D;AACA,UAAM,IAAIG,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CALY;AAOb;;;;;;AAIaH,wBAAgB,UAAUC,KAAV,EAAyB;AACpD,MAAI,CAACM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAL,EAA2B;AACzB,QAAME,GAAG,GAAG,4DAA0DF,KAAtE;AACA,UAAM,IAAIG,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CALY;AAOb;;;;;;AAIaH,yBAAiB,UAAUC,KAAV,EAAuB;AACnD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAME,GAAG,GAAG,sDAAoDF,KAAhE;AACA,UAAM,IAAIG,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CALY","names":["exports","input","ethjs_util_1","msg","Error","Buffer","isBuffer","Array","isArray"],"sourceRoot":"","sources":["../src/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}