{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseTransaction = void 0;\n\nvar common_1 = __importDefault(require(\"@ethereumjs/common\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\n\n\nvar BaseTransaction =\n/** @class */\nfunction () {\n  function BaseTransaction(txData) {\n    /**\n     * List of tx type defining EIPs,\n     * e.g. 1559 (fee market) and 2930 (access lists)\n     * for FeeMarketEIP1559Transaction objects\n     */\n    this.activeCapabilities = [];\n    /**\n     * The default chain the tx falls back to if no Common\n     * is provided and if the chain can't be derived from\n     * a passed in chainId (only EIP-2718 typed txs) or\n     * EIP-155 signature (legacy txs).\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_CHAIN = 'mainnet';\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n\n    this.DEFAULT_HARDFORK = 'istanbul';\n    var nonce = txData.nonce,\n        gasLimit = txData.gasLimit,\n        to = txData.to,\n        value = txData.value,\n        data = txData.data,\n        v = txData.v,\n        r = txData.r,\n        s = txData.s,\n        type = txData.type;\n    this._type = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(type)).toNumber();\n    var toB = ethereumjs_util_1.toBuffer(to === '' ? '0x' : to);\n    var vB = ethereumjs_util_1.toBuffer(v === '' ? '0x' : v);\n    var rB = ethereumjs_util_1.toBuffer(r === '' ? '0x' : r);\n    var sB = ethereumjs_util_1.toBuffer(s === '' ? '0x' : s);\n    this.nonce = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(nonce === '' ? '0x' : nonce));\n    this.gasLimit = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(gasLimit === '' ? '0x' : gasLimit));\n    this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n    this.value = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(value === '' ? '0x' : value));\n    this.data = ethereumjs_util_1.toBuffer(data === '' ? '0x' : data);\n    this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n    this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n    this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n\n    this._validateCannotExceedMaxInteger({\n      nonce: this.nonce,\n      gasLimit: this.gasLimit,\n      value: this.value,\n      r: this.r,\n      s: this.s\n    });\n  }\n\n  Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n    /**\n     * Alias for {@link BaseTransaction.type}\n     *\n     * @deprecated Use `type` instead\n     */\n    get: function () {\n      return this.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTransaction.prototype, \"type\", {\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get: function () {\n      return this._type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n\n  BaseTransaction.prototype.supports = function (capability) {\n    return this.activeCapabilities.includes(capability);\n  };\n\n  BaseTransaction.prototype.validate = function (stringError) {\n    if (stringError === void 0) {\n      stringError = false;\n    }\n\n    var errors = [];\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(\"gasLimit is too low. given \" + this.gasLimit + \", need at least \" + this.getBaseFee());\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    return stringError ? errors : errors.length === 0;\n  };\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n\n\n  BaseTransaction.prototype.getBaseFee = function () {\n    var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n    }\n\n    return fee;\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  BaseTransaction.prototype.getDataFee = function () {\n    var txDataZero = this.common.param('gasPrices', 'txDataZero');\n    var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n    var cost = 0;\n\n    for (var i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? cost += txDataZero : cost += txDataNonZero;\n    }\n\n    return new ethereumjs_util_1.BN(cost);\n  };\n  /**\n   * If the tx's `to` is to the creation address\n   */\n\n\n  BaseTransaction.prototype.toCreationAddress = function () {\n    return this.to === undefined || this.to.buf.length === 0;\n  };\n\n  BaseTransaction.prototype.isSigned = function () {\n    var _a = this,\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\n   * Determines if the signature is valid\n   */\n\n\n  BaseTransaction.prototype.verifySignature = function () {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      var publicKey = this.getSenderPublicKey();\n      return ethereumjs_util_1.unpadBuffer(publicKey).length !== 0;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Returns the sender's address\n   */\n\n\n  BaseTransaction.prototype.getSenderAddress = function () {\n    return new ethereumjs_util_1.Address(ethereumjs_util_1.publicToAddress(this.getSenderPublicKey()));\n  };\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n\n\n  BaseTransaction.prototype.sign = function (privateKey) {\n    if (privateKey.length !== 32) {\n      throw new Error('Private key must be 32 bytes in length.');\n    } // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n\n\n    var hackApplied = false;\n\n    if (this.type === 0 && this.common.gteHardfork('spuriousDragon') && !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n      hackApplied = true;\n    }\n\n    var msgHash = this.getMessageToSign(true);\n\n    var _a = ethereumjs_util_1.ecsign(msgHash, privateKey),\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    var tx = this._processSignature(v, r, s); // Hack part 2\n\n\n    if (hackApplied) {\n      var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1);\n      }\n    }\n\n    return tx;\n  };\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n\n\n  BaseTransaction.prototype._getCommon = function (common, chainId) {\n    var _a; // Chain ID provided\n\n\n    if (chainId) {\n      var chainIdBN = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(chainId));\n\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          throw new Error('The chain ID does not match the chain ID of Common');\n        } // Common provided, chain ID does match\n        // -> Return provided Common\n\n\n        return common.copy();\n      } else {\n        if (common_1.default.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new common_1.default({\n            chain: chainIdBN,\n            hardfork: this.DEFAULT_HARDFORK\n          });\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n            name: 'custom-chain',\n            networkId: chainIdBN,\n            chainId: chainIdBN\n          }, this.DEFAULT_HARDFORK);\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({\n        chain: this.DEFAULT_CHAIN,\n        hardfork: this.DEFAULT_HARDFORK\n      });\n    }\n  };\n\n  BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits) {\n    var e_1, _a;\n\n    if (bits === void 0) {\n      bits = 53;\n    }\n\n    try {\n      for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            key = _d[0],\n            value = _d[1];\n\n        if (bits === 53) {\n          if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n            throw new Error(key + \" cannot exceed MAX_INTEGER, given \" + value);\n          }\n        } else if (bits === 256) {\n          if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.TWO_POW256)) {\n            throw new Error(key + \" must be less than 2^256, given \" + value);\n          }\n        } else {\n          throw new Error('unimplemented bits value');\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  return BaseTransaction;\n}();\n\nexports.BaseTransaction = BaseTransaction;","map":{"version":3,"mappings":"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","names":["txData","gasLimit","to","value","data","v","r","s","type","_type","ethereumjs_util_1","toNumber","toB","vB","rB","sB","nonce","length","undefined","_validateCannotExceedMaxInteger","Object","BaseTransaction","capability","activeCapabilities","includes","stringError","errors","getBaseFee","gt","push","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","buf","publicKey","getSenderPublicKey","e","privateKey","Error","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","tx","_processSignature","index","indexOf","splice","chainId","chainIdBN","eq","copy","common_1","isSupportedChainId","chain","hardfork","DEFAULT_HARDFORK","forCustomChain","DEFAULT_CHAIN","name","networkId","_a","values","bits","entries","_c","key","gte","exports"],"sourceRoot":"","sources":["../src/baseTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}